syntax = "proto3";

package tickets.tickets;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "tickets/tickets/params.proto";
import "tickets/tickets/ticket.proto";

option go_package = "tickets/x/tickets/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/tickets/tickets/params";
  
  }
  
  // Queries a list of ShowTicket items.
  rpc ShowTicket (QueryShowTicketRequest) returns (QueryShowTicketResponse) {
    option (google.api.http).get = "/tickets/tickets/show_ticket/{id}";
  
  }
  
  // Queries a list of ListTickets items.
  rpc ListTickets (QueryListTicketsRequest) returns (QueryListTicketsResponse) {
    option (google.api.http).get = "/tickets/tickets/list_tickets";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowTicketRequest {
  string id = 1;
}

message QueryShowTicketResponse {
  Ticket ticket = 1 [(gogoproto.nullable) = false];
}

message QueryListTicketsRequest {
  string name = 1;
  string event = 2;
}

message QueryListTicketsResponse {
  repeated Ticket ticket = 1 [(gogoproto.nullable) = false];
}

